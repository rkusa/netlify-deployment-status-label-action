name: Netlify Deploy Status Label
on:
  status

jobs:
  deploying:
    if: github.event.context == 'deploy/netlify' && contains(github.event.target_url, 'nervous-dubinsky-25f352')
    name: Add Deploying Label
    runs-on: ubuntu-latest
    steps:
      - uses: actions/github-script@0.4.0
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const state = context.payload.state // success, pending, error, failure
            const owner = context.payload.repository.owner.login
            const repo = context.payload.repository.name
            for (const branch of context.payload.branches) {
              console.log('head:', `${owner}:${branch.name}`)
              const prs = await github.paginate(github.pulls.list.endpoint.merge({
                owner,
                repo,
                state: 'open',
                head: `${owner}:${branch.name}`,
              }))
              for (const pr of prs) {
                if (context.payload.commit.sha !== pr.head.sha) {
                  // don't update labels if the status is reported for a commit that is not the current head of this PR
                  console.warn('ignoring out of date pull request')
                  continue;
                }
                
                console.log(pr)
                console.log('labels:', pr.labels)
                const newLabels = pr.labels
                  .map(label => label.name)
                  .filter(name => (!['deploying', 'deployed', 'deploy-failed'].includes(name)))
                switch (state) {
                  case 'success':
                    newLabels.push('deployed')
                    break
                    
                  case 'pending':
                    newLabels.push('deploying')
                    break
                    
                  case 'error':
                  case 'failure':
                    newLabels.push('deploy-failed')
                    break
                }
                console.log('newLabels:', newLabels)
                github.issues.replaceLabels({
                  owner,
                  repo,
                  issue_number: pr.number,
                  labels: newLabels
                })
              }
            }
  debug:
    name: Debug
    runs-on: ubuntu-latest
    steps:
      - name: Dump env
        run: env | sort
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"
